# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  working_directory: ~/shelf

version: 2
jobs:

  ##############
  # Build job uses a go cli tool to create a github release
  ##############
  build:

    <<: *defaults

    docker:
      - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-


      #must run install to ensure multi module dependencies(shelf-api) are cached
      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run build and test
      - run: mvn install

      - persist_to_workspace:
          root: shelf-gateway
          paths:
            - target


      # save test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - store_artifacts:
          path: shelf-gateway/target



  ##############
  # Integration Test Job
  ##############
  integration_test:
    <<: *defaults

    docker:
      - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout


  ##############
  # Release job uses a go cli tool to create a github release
  ##############
  release:
    <<: *defaults

    docker:
      - image: circleci/golang:1.8

    steps:

     - checkout
     - run: go get github.com/aktau/github-release
     - run:
        name: Delete Release
        command: |
              github-release delete  --user kgrid --repo kgrid-shelf  --tag 0.5.8-SNAPSHOT || true
              git fetch && git tag -d 0.5.8-SNAPSHOT && git push origin :refs/tags/0.5.8-SNAPSHOT || true
     - run:
        name: Create Release
        command: github-release release  --user kgrid --repo kgrid-shelf  --tag 0.5.8-SNAPSHOT --name "0.5.8-SNAPSHOT"
     - attach_workspace:
        at: shelf/shelf-gateway
     - run:
        name: find file
        command: cd shelf && ls -al

workflows:
  version: 2
  build_test_release:
    jobs:
      - build
      - integration_test:
          requires:
            - build
      - release:
          requires:
            - integration_test