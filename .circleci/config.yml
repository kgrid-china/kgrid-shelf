# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  working_directory: ~/shelf

version: 2
jobs:

  ##############
  # Build job uses a go cli tool to create a github release
  ##############
  build:

    <<: *defaults

    docker:
      - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      #must run install to ensure multi module dependencies(shelf-api) are cached
      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run build and test
      - run:
         name: Build and Test And Verify
         command: |
            mvn verify

      # save test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - store_artifacts:
          path: target

      # Will normally run deploy but if triggered with Release will prepare and perform maven release
      - run:
          name: Deploy/Release
          command: |
            if [ $RELEASE ]; then
                git config --global user.email "$GIT_USER_EMAIL"
                git config --global user.name "$GIT_USER_NAME"
                mvn release:clean release:prepare -B  -DscmCommentPrefix="Release [skip ci] " -DreleaseVersion=$RELEASE -DdevelopmentVersion=$NEXT release:perform -P ci -s .circleci/settings.xml
            else
                echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
                mvn clean deploy  -P ci -s .circleci/settings.xml
            fi

      # Will normally run deploy but if triggered with Release will prepare and perform maven release
      - run:
          name: Trigger Activator and Library to build
          command: |
            curl -v -X POST --header 'Content-Type:application/json' \
              -d '{"build_parameters":{"CIRCLE_JOB":"deploy_heroku"}}' \
              https://circleci.com/api/v1.1/project/github/kgrid/kgrid-activator/tree/master?circle-token=$CIRCLECI_TOKEN
            curl -v -X POST --header 'Content-Type:application/json' \
             -d '{"build_parameters":{"CIRCLE_JOB":"deploy_heroku"}}' \
             https://circleci.com/api/v1.1/project/github/kgrid/kgrid-library/tree/master?circle-token=$CIRCLECI_TOKEN

